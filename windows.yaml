networks:
  app-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - ./kafka/kafka-init.sh:/etc/kafka/kafka-init.sh
      - kafka_data:/var/lib/kafka/data
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: 'false'
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT
    networks:
      - app-network

  flink-jobmanager:
    image: flink:1.17.0
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
      - "6123:6123"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        jobmanager.rpc.port: 6123
        jobmanager.memory.process.size: 1600m
        rest.address: 0.0.0.0
        rest.bind-address: 0.0.0.0
        jobmanager.bind-host: 0.0.0.0
        parallelism.default: 2
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8081"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

  flink-taskmanager:
    image: flink:1.17.0
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager 
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
        taskmanager.memory.process.size: 1728m
    networks:
      - app-network

  flink-app:
    build:
      context: ./flink-app
      dockerfile: Dockerfile
    container_name: flink-app
    depends_on:
      - flink-jobmanager
      - kafka
      - postgres
    environment:
      - FLINK_JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        rest.address: flink-jobmanager
        rest.bind-address: flink-jobmanager
    command: ["flink", "run", "-d", "-c", "com.example.FlinkEmissionsProcessor", "/opt/flink/usrlib/flink-emissions-processor.jar"]
    restart: on-failure:3
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: demo
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  app:
    build:
      context: ./app
    container_name: app
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://demo:demo@postgres:5432/demo
      KAFKA_BROKER: kafka:9092
    volumes:
      - ./app/src:/usr/src/app/src
    depends_on:
      - kafka
      - postgres
    networks:
      - app-network

volumes:
  kafka_data:
    driver: local
  postgres_data:
    driver: local